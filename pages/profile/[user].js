import Head from "next/head";
import styles from "../../styles/Profile.module.scss";
// import Feed from "../Components/Home/Feed";
import OnYourMind from "../../Components/OnYourMind";
import { motion } from "framer-motion";
import UserInfo from "../../Components/Profile/UserInfo";
import EditProfileModal from "../../Components/Modals/EditProfileModal";
import { useEffect, useState } from "react";
import { useData } from "../../Context/DataContext";
import router from "next/router";
import { useAuth } from "../../Context/AuthContext";
import Feed from "../../Components/Home/Feed";
import ErrorPage from "next/error";

export default function UserProfile({ setShow }) {
  const { fetchProfile, profile, fetchUserFeed } = useData();
  const [data, setData] = useState({});
  const [status, setStatus] = useState(false);
  const [feed, setFeed] = useState(null);
  const { isLoggedIn, editModal } = useAuth();
  const { user } = router.query;

  useEffect(() => {
    if (!isLoggedIn) router.push("/");
  }, [isLoggedIn]);

  useEffect(() => {
    async function temp() {
      setStatus(false);
      const res = await fetchProfile(user);
      const temp = await fetchUserFeed(user);
      if (res.error) {
        setShow(false);
        setData(null);
      } else {
        setData(res);
        setFeed(temp);
      }
    }
    if (user !== profile?.username) temp();
    else {
      fetchUserFeed(user)
        .then((res) => setFeed(res))
        .catch((err) => console.log(err));
      setData(profile);
      setStatus(true);
    }
  }, [profile, user]);

  return (
    <>
      <Head>
        <title>Profile - {user}</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      {data ? (
        <>
          <EditProfileModal />
          <motion.main
            initial={{ opacity: 0, y: 100 }}
            animate={{ opacity: 1, y: 0 }}
            exit={{ opacity: 0, y: 1000 }}
            layout
            className={styles.main}
          >
            {data && <UserInfo data={data} status={status} setData={setData} />}
            {status && <OnYourMind setFeed={setFeed} />}
            <Feed
              data={feed}
              title={`${data?.username}'s buzzes`}
              setFeed={setFeed}
            />
          </motion.main>
        </>
      ) : (
        <motion.div
          initial={{ opacity: 0 }}
          animate={{ opacity: 1 }}
          exit={{ opacity: 0 }}
          className={styles.container}
          layout
        >
          <ErrorPage statusCode={404} />
        </motion.div>
      )}
    </>
  );
}
